service cloud.firestore {

  match /databases/{database}/documents {

    //
    // returns true if a given user is an Admin-level user in a specific tenant website.
    //
    // This admin could be either the tenant himself or some other user with the admin role.
    //

    function isAdmin(tenantId) {
      return request.auth.token.tenantId == tenantId && request.auth.token.isAdmin == true;
    }

    function isCurrentUser(uid) {
      return request.auth.uid == uid;
    }

    function isDocumentOwnedByCurrentUser() {
      return request.resource.data.userId == request.auth.uid;
    }

    match /tenants/{tenantId} {

      allow read: if true;

      // from the UI, only allow creation of new (and still free) tenants
      allow create: if request.auth.uid != null && request.resource.data.status == 'new';

      // only the tenant can modify its own data
      allow update: if isCurrentUser(tenantId);

    }

    match /tenantSettings/{tenantId} {

      // only the tenant himself (and not other admins) can both read and edit the tenant own settings
      allow read,write: if isCurrentUser(tenantId);

      // the tenant user can read his own permissions, and even edit them, unlike admin users
      match /userPermissions/{tenantId} {
        allow read, write: if isCurrentUser(tenantId);
      }

    }

    match /schools/{tenantId}/courses/{courseId}  {

        // all course data is public
        allow read: if true;

        // only admins of a given online school can modify the courses of that particular school
        allow write: if isAdmin(tenantId);

        match /sections/{sectionId} {

          // everything is public
          allow read: if true;

          // but only admins can modify
          allow write, delete: if isAdmin(tenantId);

        }

        match /lessons/{lessonId} {

          // everything is public
          allow read: if true;

          // but only admins can modify
          allow write, delete: if isAdmin(tenantId);

        }

        match /coupons/{lessonId} {

          // everything is public
          allow read: if true;

          // but only admins can modify
          allow write, delete: if isAdmin(tenantId);

        }

        match /videos/{lessonId} {

          // only a Firebase Could Function can read this
          allow read: if false;

          // only admins can modify
          allow write, delete: if isAdmin(tenantId);

        }

        match /questions/{questionId} {

          // all questions are public
          allow read: if true;

          // but only admins or the user that created the question can modify it
          allow write, delete: if isAdmin(tenantId) || isDocumentOwnedByCurrentUser();

        }

        // even admins can only delete draft courses, to avoid accidentally deleting a whole course
        allow delete: if isAdmin(tenantId) && resource.data.status == 'draft';

    }

    match /schools/{tenantId}/descriptions/{courseId}  {

        // all text descriptions are public info
        allow read: if true;

        // only tenants can edit descriptions
        allow write, delete: if isAdmin(tenantId);

    }

    match /schools/{tenantId}/users/{uid}  {

        // user data is only visible by admins or the user himself
        allow read: if isAdmin(uid) || isCurrentUser(uid);

        // only admins or the user himself can create or edit the data of a given user
        allow write: if isAdmin(tenantId) || isCurrentUser(uid);

        match /{restOfPath=**} {

          allow read: if isAdmin(uid) || isCurrentUser(uid);

          allow write: if isAdmin(tenantId) || isCurrentUser(uid);

        }

    }

    match /schools/{tenantId}/usersPrivate/{uid}  {

        // user data is only visible by admins or the user himself
        allow read: if isAdmin(uid) || isCurrentUser(uid);

        // even the user himself can't edit this
        allow write: if isAdmin(tenantId);

    }

    match /schools/{tenantId}/content/{contentId}  {

        // all content is public info
        allow read: if true;

        // only the tenant can edit the website's content
        allow write, delete: if isCurrentUser(tenantId);

    }

    match /schools/{tenantId}/purchaseSessions/{purchaseSessionId}  {

        // all sessions are public info
        allow read: if true;

        // only cloud functions can modify this data
        allow write, delete: if false;

    }

    match /schools/{tenantId}/latestLessonsView/{lessonId}  {

        // this view is public info
        allow read: if true;

        // only an admin can edit this
        allow write: if isAdmin(tenantId);

    }


  }

}
